/*package whatever //do not write package name here */

import java.io.*;

class LinkedList {
    Node head;
    
    //Inner class
    static class Node {
        int data;
        Node next;
        Node(int d) {
            this.data=d;
            next=null;
        }
    }
    
    public void printLinkedList(Node head) {
        if(head!=null){
            System.out.print(head.data + " ");
            printLinkedList(head.next);
        }
        else {
            System.out.println();
        }
        
    }
    
    
    
    public void deleteNodeWithKey(int key) {
        Node n = head;
        Node prev= null;
        if(n!=null && n.data == key)
        {
            head = head.next;
            n.next = null ;
            return ;
        }
        while(n!=null && n.data!=key) {
            prev=n;
            n=n.next;
        }
        if(n==null){
            System.out.println("Not Found");
        }
        else{
            prev.next=n.next;
            n.next=null;
        }
    }
    
    public void deleteNodeWithPosition(int position) {
        Node n= head;
        Node prev= null;
        int count = 0;
        if(n!=null && position == 0) {
            head = head.next;
            n.next= null;
            return ;
        }
        while(n!=null && count!=position){
            prev = n ;
            n = n.next;
            count++;
        }
        if(n==null) {
            System.out.println("Postion out of bound");
        }
        else {
            prev.next=n.next;
            n.next=null;
        }
    }
    
	public static void main (String[] args) {
	    
		LinkedList l = new LinkedList();
		
		//Create three Nodes
		l.head = new Node(10);
		Node second = new Node(20);
		Node third = new Node(30);
		Node fourth = new Node(40);
		Node fifth = new Node(50);
		
		//link nodes
		l.head.next=second;
		second.next=third;
		third.next=fourth;
		fourth.next=fifth;
		
		//print Linked LinkedList
		l.printLinkedList(l.head);
		l.deleteNodeWithKey(10);
		l.printLinkedList(l.head);
		l.deleteNodeWithKey(30);
		l.printLinkedList(l.head);
		l.deleteNodeWithPosition(0);
		l.printLinkedList(l.head);
	}
}
